(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{206:function(a,t,e){"use strict";e.r(t);var r=e(1),s=Object(r.a)({},function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"es6"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#es6","aria-hidden":"true"}},[a._v("#")]),a._v(" es6")]),a._v(" "),e("h2",{attrs:{id:"_1-let-const"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-let-const","aria-hidden":"true"}},[a._v("#")]),a._v(" 1- let, const")]),a._v(" "),e("ol",[e("li",[a._v("都是不可以重复声明")]),a._v(" "),e("li",[a._v("存在块级作用域")]),a._v(" "),e("li",[a._v("都不会预解析变量")]),a._v(" "),e("li",[a._v("const做常量声明（一般常量名用大写）")])]),a._v(" "),e("h2",{attrs:{id:"_2-解构-函数默认值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-解构-函数默认值","aria-hidden":"true"}},[a._v("#")]),a._v(" 2 -解构   函数默认值")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("//older\nfunction(){\n  var a=a||5;\n}\n//now\nfunction(a=5){\n  \n}\n")])])]),e("h2",{attrs:{id:"_3-字符串"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-字符串","aria-hidden":"true"}},[a._v("#")]),a._v(" 3 -字符串")]),a._v(" "),e("ol",[e("li",[e("p",[a._v("新增了``反引号，")])]),a._v(" "),e("li",[e("p",[a._v("反引号中${}处理模板字符串")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("let name='ddd';\nlet age =5;\nlet str =`${name}${age}`;\n")])])])])]),a._v(" "),e("h2",{attrs:{id:"_4-includes-判断字符串是否包含某个字符串"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-includes-判断字符串是否包含某个字符串","aria-hidden":"true"}},[a._v("#")]),a._v(" 4 -includes 判断字符串是否包含某个字符串")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("//older\nvar str='eeeetttd';\nstr.indexOf('d');\n//now \nlet str='woaini';\nstr.includes('ai')//true;\n")])])]),e("h2",{attrs:{id:"_5-箭头函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-箭头函数","aria-hidden":"true"}},[a._v("#")]),a._v(" 5 -箭头函数")]),a._v(" "),e("ol",[e("li",[e("p",[a._v("如果参数只有一个，可以省略小括号")])]),a._v(" "),e("li",[e("p",[a._v("不写return 可以不写大括号")])]),a._v(" "),e("li",[e("p",[a._v("没有arguments变量")])]),a._v(" "),e("li",[e("p",[a._v("改变this指向----指向上一层的this指向")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("let sum =(a,b)=>a+b;\n")])])])])]),a._v(" "),e("h2",{attrs:{id:"_6-数组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-数组","aria-hidden":"true"}},[a._v("#")]),a._v(" 6 -数组")]),a._v(" "),e("h3",{attrs:{id:"_6-1-array-from将假数组（对象数组）转化为真数组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-array-from将假数组（对象数组）转化为真数组","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.1 -Array.from将假数组（对象数组）转化为真数组")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("let arr=Array.from({'0':1},'1':2,length:2);\n")])])]),e("h3",{attrs:{id:"_6-2-array-of-创建数组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-array-of-创建数组","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.2 -Array.of()创建数组")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("Array.of(1,2,3)//[1,2,3]\n")])])]),e("h3",{attrs:{id:"_6-3-array-filter-数组过滤"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-array-filter-数组过滤","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.3 -Array.filter() 数组过滤")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("let retsult=[1,2,3,4,5].filter(function(item){//item形参，内部才是实参\n  return item>3;//找到大于3的并返回\n})\nconsole.log(retsult);//[4,5]\nArray.prototype.myFilter=function(callback){\n  var arr=[];\n  for(var i=0;i<this.length;i++){\n    var item=this[i];\n    if(callback(item)){//callback(item)调用外面的函数\n      arr.push(item);\n    }\n  }\n  \n}\n")])])]),e("h3",{attrs:{id:"_6-4-araay-find-查找并把符合的值返回值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-araay-find-查找并把符合的值返回值","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.4 -Araay.find()查找并把符合的值返回值")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("let result = [1,1,2,2,2,3].find(function(item){\n  return item==2;\n})\nconsole.log(result)//2;\n")])])]),e("h3",{attrs:{id:"_6-5-array-includes-判断数组是否有某值，跟字符串样"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-5-array-includes-判断数组是否有某值，跟字符串样","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.5 -Array.includes()判断数组是否有某值，跟字符串样")]),a._v(" "),e("h2",{attrs:{id:"_7-class类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-class类","aria-hidden":"true"}},[a._v("#")]),a._v(" 7 -Class类")]),a._v(" "),e("ol",[e("li",[e("p",[a._v("Class定义类")])]),a._v(" "),e("li",[e("p",[a._v("extends实现继承")])]),a._v(" "),e("li",[e("p",[a._v("支持静态方法")])]),a._v(" "),e("li",[e("p",[a._v("有constructor构造方法")]),a._v(" "),e("div",{staticClass:"language-es6 extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("class Parent{//父类\n  constructor(name){\n    this.name=name;\n  }\n  getName(){\n    return this.name;\n  }\n  static fn(){\n    return 6;\n  }\n  \n}\n//子类\nclass Child extends Parent{//继承Parent父类\n  constructor(name,age){\n    super(name);//固定写法，表示执行父类的constructor方法\n    this.age=age;\n  }\n}\nlet child =new Child('my',66);//这样就可以在子类中调用父类的方法和属性\nconsole.log(child.getName())//my\nconsole.log(child.name)//my 调用的时父类的\nconsole.log(child.fn());//66\n\n")])])])])])])},[],!1,null,null,null);t.default=s.exports}}]);